buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.0'
    }
}

repositories {
    google()
    jcenter()
}

apply plugin: 'com.android.application'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
}

android {
    /*******************************************************
     * The following variables:
     * - androidBuildToolsVersion,
     * - androidCompileSdkVersion
     * - qt5AndroidDir - holds the path to qt android files
     *                   needed to build any Qt application
     *                   on Android.
     *
     * are defined in gradle.properties file. This file is
     * updated by QtCreator and androiddeployqt tools.
     * Changing them manually might break the compilation!
     *******************************************************/

    compileSdkVersion androidCompileSdkVersion.toInteger()

    buildToolsVersion '28.0.3'

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = [qt5AndroidDir + '/src', 'src', 'java']
            aidl.srcDirs = [qt5AndroidDir + '/src', 'src', 'aidl']
            res.srcDirs = [qt5AndroidDir + '/res', 'res']
            resources.srcDirs = ['resources']
            renderscript.srcDirs = ['src']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
       }
    }

    tasks.withType(JavaCompile) {
        options.incremental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        // widgets and associated styles
        exclude 'lib/*/libQt5Widgets_*.so'
        exclude 'lib/*/libplugins_styles_*.so'

        // controls 2 styles other than material
        exclude 'lib/*/libqml_QtQuick_Controls.2_Fusion*.so'
        exclude 'lib/*/libqml_QtQuick_Controls.2_Imagine*.so'
        exclude 'lib/*/libqml_QtQuick_Controls.2_Universal*.so'

        // the qml debugger
        exclude 'lib/*/libplugins_qmltooling_qmldbg_*.so'

        // can't exclude QQC1 because dialogs depends on it
        // but we don't need the styles because we aren't
        // actually displaying any of those controls.
        exclude 'lib/*/libqml_QtQuick_Controls_Styles_*'
    }

    // Do not compress Qt binary resources file
    aaptOptions {
        noCompress 'rcc'
    }

    // HACK ECM copies a lot of unnecessary stuff into the assets
    // folder. There's no direct setting to exclude it, so we use
    // a post-merge hook to go back and delete it.
    // TODO can we exclude some of this stuff from the RCC bundle too?
    android.applicationVariants.all { variant ->
        variant.mergeAssetsProvider.get().doLast {
            delete(fileTree(dir: variant.mergeAssetsProvider.get().outputDir, includes: [
                // duplicated kirigami files
                // (they're actually loaded from androd_rcc_bundle.rcc)
                'qml/org/kde/kirigami.2/**',

                // CMake build scripts
                'share/ECM/**',

                // documentation
                'share/gtk-doc/**'
            ]))
        }
    }

    defaultConfig {
        resConfig "en"
        minSdkVersion = qtMinSdkVersion
        targetSdkVersion = qtTargetSdkVersion
    }
}
